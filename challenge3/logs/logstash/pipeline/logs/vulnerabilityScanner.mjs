#!/usr/bin/env zx

const fs = require('fs');
const path = require('path');

const logFile = 'web_logs_2024_01_24.log';

// Define patterns for the main three OWASP vulnerabilities
const patternInjection = /UNION|SELECT|INSERT|UPDATE|DELETE|DROP|--|\/\*/gi;
const patternBrokenAuth = /\/login|PHPSESSID/gi;
const patternXSS = /<script|<img src|onerror=|alert\(|<iframe|<body onload=|<a href=|<div style=|javascript:|<svg onload=|<embed|<object|<link|<meta|<style|document\.cookie|document\.write|window\.location|eval\(|expression\(|src=|onload=|onmouseover=|onclick=/gi;

// Read the log file content
const logContent = fs.readFileSync(path.resolve(logFile), 'utf-8');

// Count occurrences of each pattern in the log file
const a1Count = (logContent.match(patternInjection) || []).length;
const a2Count = (logContent.match(patternBrokenAuth) || []).length;
const a3Count = (logContent.match(patternXSS) || []).length;

// Define examples and recommendations
const injectionExample = "Example: SELECT * FROM users WHERE username='admin' -- and password='password'";
const injectionRecommendation = "Recommendation: Use parameterized queries and prepared statements to prevent injection attacks.";

const brokenAuthExample = "Example: Attacker uses a stolen session ID (PHPSESSID) to gain unauthorized access.";
const brokenAuthRecommendation = "Recommendation: Implement multi-factor authentication and secure session management practices.";

const xssExample = "Example: <script>alert('XSS')</script>";
const xssRecommendation = "Recommendation: Validate and escape all user inputs, and use Content Security Policy (CSP) headers.";

// Output the results with additional information
console.log("===========================================");
console.log("OWASP Vulnerabilities Found in Log File:");
console.log("===========================================");
console.log(`Injection - ${a1Count}`);
console.log("-------------------------------------------");
console.log(injectionExample);
console.log(injectionRecommendation);
console.log("");
console.log(`Broken Authentication - ${a2Count}`);
console.log("-------------------------------------------");
console.log(brokenAuthExample);
console.log(brokenAuthRecommendation);
console.log("");
console.log(`Cross-Site Scripting (XSS) - ${a3Count}`);
console.log("-------------------------------------------");
console.log(xssExample);
console.log(xssRecommendation);
console.log("===========================================");
